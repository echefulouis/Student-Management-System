<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CloseBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAACCCAMAAAC93eDPAAAABGdBTUEAALGPC/xhBQAAAGNQTFRF////
        AAAA/Pz8BAQEzs7O9vb21dXVSEhIe3t77+/vxcXFi4uLdnZ26urq+fn5fn5+paWlcHBwFBQUampqNjY2
        hISE4ODgmpqarKyst7e3vr6+W1tbLy8vUVFRJiYmkZGRQEBAfbLV3QAABD9JREFUeF7tm4tyqjAQhgWx
        eAHUem/Vnvd/yrMh/4aIAQNIk+nkmzkzxxCSZbM3QjoJBAKBQCAQ+NvERf5Rkhcxmn6RPDn9/Lt/RuDz
        nv6ckhwXx2exXN0xdY37arlApxGZJbs9JjSy3yUzdB2H2SbFVC2km/GEyA+Y5CWHcczCXgDBCEIUlysG
        t+R6KXDrm8i/o2iKwa2gzt9vVcQGA5dIUfbZaZnABRfJ8pRJR3mQcyMvv4HFDkMy1+05f7L6WX7e1hdr
        96Ywcaw5Ynpp1HB+qfc94sogEoxGShZa3r4Y9LjlnpIE7QP4wlCStcVTHdfoLPlCc28uGKg0tNsHpUdc
        aIQ6fNx0u7zgQk8qHdCQJzRacNJlGKSHDwwi6GZZDzY8wB6OGEI8UdYx2BWZpojefrHQnqTDIjC0GEza
        Nz4I9wJnNHXijJuJLZo6okXlJZo6ssTttCK9YnWO24nesV57ih45q6DcCHrYAVPZw3f3Iptj0jTK0NKL
        TLlF5wiVI+lNo3RQ6VGkLMO161Ks5H3EwFynYku0QoslsEV6gMFlB5kk9NBNDShVp9ENDQO4sQgHNFgx
        k/cQlBuHUiWaLu8Xyp/XaBiEqh86LOpMJYe3FMEqyKX2alC1WvZcocTbaNqYMc7TaGvwYUqaEvusLStm
        MiKDQ5a5a14YZJsUc3HtKSPFwjGlRe7Q9JIFvxKkaNApL0XzpwqOfpYSRBEadDg+7W2TtkpwppgqxqJ/
        Bjslqysv4qeOqkBtUy5HRmNIpSKgfKIs1vVAP8oFp0smQ+Fwbx0heQ/FvHJQ98NaVKsgmg3w+9gdv1+g
        fMhs+NLo6muBVRCGakIVUHZerlyyqbuaDnpgHdTF0lCPZeeWXGbszYGEJpR+Pq2UPpcyidJCLc4DM96g
        sit/2BqbShUyvTLkVg/Nalk/mOgDHJ3s7JGjc4vAQgasRRxXq9A0PwnGqjWFmididohmH1ZrUeqhVAnR
        uAoCjjX35i4VBe+ptlgOjcNOeOBdsOeAqcM2/mlTBqpKqz2YxjS1tEGC/nNof7wFelrVgarCwG8zNKHK
        f4LWVRCgn1UNZCeCmJCNgCCTaJdgDBHEnGoz9PBKgL8qgvuFoAnHM0cPnNKD0ORBgB4jTVUVgFWa8iFZ
        e1CyeFC4eVC+elDE+/Aq0/JCF//SC50Hr7X6y31toj4v92XakSJYv9zrWxxPFK+2OAyyqZxqv8XhwUaP
        B9tdPmz6ebD1yctH9zrbAPZgG9yHjwEefBKZxO/+MNRDmSqgOPs8Ju5nHbr6SOjDp1IfPhhXPk0r4uaz
        uZa1CTeHB3w4QuHDQRIfjtPo9uDqUFHNsoj2o1XV5IL3HK2i+OD8gBmhxXo2tIZjdg8MLnd03B82JFdz
        fuSScH7wVOD8+K3A+SFkgfOj2CWuD6QDcSw/dXcsX6H+OOHo4o8TAoFAIBAIBH6PyeQ/L8Mxb1ZDoHgA
        AAAASUVORK5CYII=
</value>
  </data>
</root>